@using AutismEducationPlatform.Web.Models.ViewModels
@model List<TaleViewModel>

@{
    ViewData["Title"] = "Masallar";
    string GetYoutubeId(string url)
    {
        if (string.IsNullOrEmpty(url)) return string.Empty;
        
        try
        {
            var uri = new Uri(url);
            var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
            var v = query["v"];
            if (!string.IsNullOrEmpty(v)) return v;
            
            var segments = uri.Segments;
            return segments.Length > 0 ? segments[segments.Length - 1].TrimEnd('/') : string.Empty;
        }
        catch
        {
            return string.Empty;
        }
    }
}

<link rel="stylesheet" href="/css/animals-bg.css" />
<div class="body-animals-bg" style="background-image: url('/images/animals/animal-bg-pattern.png'), linear-gradient(135deg, #FFB347 0%, #6B48FF 50%, #FF6B6B 100%); background-size: 300px, cover; background-repeat: repeat;">
    <div class="cloud"></div>
    <div class="cloud cloud2"></div>
    <div class="cloud cloud3"></div>
    <div class="container py-5">
        <div class="row justify-content-center mb-5">
            <div class="col-lg-8 text-center">
                <h2 class="mb-3" style="font-size:2.5rem; font-weight:800; color:#6B48FF;">
                    <i class="fas fa-book-open me-2"></i> Masallar
                </h2>
                <p class="lead">
                    Masal videolarını izleyebilir, eğlenceli vakit geçirebilirsin!
                </p>
            </div>
        </div>
        <div class="row g-4">
            @foreach (var tale in Model.Where(t => !string.IsNullOrEmpty(t.VideoUrl)))
            {
                var youtubeId = GetYoutubeId(tale.VideoUrl);
                if (string.IsNullOrEmpty(youtubeId)) continue;
                
                var thumbnail = $"https://img.youtube.com/vi/{youtubeId}/hqdefault.jpg";
                <div class="col-md-6 col-lg-4" data-aos="zoom-in">
                    <div class="card h-100 shadow-lg border-0 text-center p-4" style="background: linear-gradient(135deg, #FFB347 0%, #6B48FF 100%); color: #fff; border-radius: 25px; min-height: 420px;">
                        <a href="javascript:void(0)" onclick="playVideo('@youtubeId', '@tale.Title')" style="text-decoration:none; color:inherit;">
                            <img src="@thumbnail" alt="@tale.Title" class="img-fluid rounded mb-3" style="height:200px; object-fit:cover; background: #fff;" onerror="this.src='/images/default-video-thumbnail.jpg'">
                            <h4>@tale.Title</h4>
                        </a>
                        <button onclick="playVideo('@youtubeId', '@tale.Title')" class="btn btn-outline-light mt-3" onmouseover="markTaleCompleted('@tale.Title', this, '@tale.Id');">
                            <i class="fab fa-youtube me-2"></i> Videoyu İzle
                        </button>
                        <div class="progress my-3" style="height: 20px;">
                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" id="progress-tale-@tale.Id" role="progressbar" style="width: @tale.ProgressPercentage%" aria-valuenow="@tale.ProgressPercentage" aria-valuemin="0" aria-valuemax="100">@tale.ProgressPercentage%</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Video Modal -->
<div class="modal fade" id="videoModal" tabindex="-1" aria-labelledby="videoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="videoModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div class="ratio ratio-16x9">
                    <iframe id="videoFrame" src="" title="YouTube video" allowfullscreen></iframe>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .tale-card {
        transition: transform 0.3s ease;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .tale-card:hover {
        transform: translateY(-5px);
    }

    .tale-image {
        height: 200px;
        object-fit: cover;
        border-bottom: 1px solid rgba(0,0,0,0.1);
    }

    .card-title {
        color: #333;
        font-weight: bold;
        margin-top: 1rem;
    }

    .card-text {
        color: #666;
        font-size: 0.95rem;
        line-height: 1.5;
        margin-bottom: 1.5rem;
    }

    .watch-btn {
        border-radius: 50px;
        padding: 8px 20px;
        transition: all 0.3s ease;
    }

    .watch-btn:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .watch-btn:active {
        transform: scale(0.95);
    }

    .modal-content {
        border-radius: 15px;
        overflow: hidden;
    }

    .modal-header {
        border-bottom: none;
        padding: 1rem 1.5rem;
    }

    .modal-title {
        font-weight: bold;
        color: #333;
    }

    #videoFrame {
        border: none;
    }
</style>

@section Scripts {
    <script>
        let videoModal;

        document.addEventListener('DOMContentLoaded', function() {
            videoModal = new bootstrap.Modal(document.getElementById('videoModal'));

            document.getElementById('videoModal').addEventListener('hidden.bs.modal', function () {
                document.getElementById('videoFrame').src = '';
            });
        });

        function playVideo(videoId, title) {
            if (!videoId) return;
            
            document.getElementById('videoModalLabel').textContent = title;
            document.getElementById('videoFrame').src = `https://www.youtube.com/embed/${videoId}?autoplay=1`;
            videoModal.show();
        }

        function markTaleCompleted(taleTitle, btn, taleId) {
            const progressBar = document.getElementById('progress-tale-' + taleId);
            if (!progressBar) return;
            
            progressBar.style.width = '100%';
            progressBar.textContent = '100%';
            progressBar.setAttribute('aria-valuenow', 100);
            
            fetch('/Course/SaveTaleProgress', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    taleTitle: taleTitle,
                    progress: 100
                })
            })
            .then(response => response.json())
            .then(data => {
                console.log('Progress saved successfully');
            })
            .catch(error => console.error('Error saving progress:', error));
        }
    </script>
} 